---
import { getLangFromUrl, useTranslations } from '../i18n/utils'
import Icon from './Icon.astro';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<button id="dark-mode-button" style="display: none;">
    <Icon icon="dark" size="2.8rem" />
    {t('mode.dark')}
</button>

<button id="light-mode-button" style="display: none;">
    <Icon icon="light" size="2.8rem" />
    {t('mode.light')}
</button>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        // ローカルストレージからテーマを取得
        const darkModeButton = document.getElementById('dark-mode-button');
        const lightModeButton = document.getElementById('light-mode-button');
        
        // テーマの更新
        const updateButtons = (theme:string) => {
            if (theme === 'dark') {
                if (darkModeButton && lightModeButton) {
                    darkModeButton.style.display = 'none';
                    lightModeButton.style.display = 'block';
                }
            } else {
                if (darkModeButton && lightModeButton) {
                    darkModeButton.style.display = 'block';
                    lightModeButton.style.display = 'none';
                }
            }
        };

        const savedTheme = localStorage.getItem('theme');
        if (savedTheme) {
            updateButtons(savedTheme);
        }

        if (darkModeButton) {
            darkModeButton.addEventListener('click', () => {
                document.documentElement.classList.remove('light');
                document.documentElement.classList.add('dark');
                localStorage.setItem('theme', 'dark');
                updateButtons('dark');
            });
        }

        if (lightModeButton) {
            lightModeButton.addEventListener('click', () => {
                document.documentElement.classList.remove('dark');
                document.documentElement.classList.add('light');
                localStorage.setItem('theme', 'light');
                updateButtons('light');
            });
        }
    });
</script>

<style>
    button {
        font-size: 2.3rem;
        padding: 1rem;
    }
    
    button:hover {
        box-shadow: 0 0 0 1px var(--color-font);
    }
</style>