---
import "the-new-css-reset";
import Icon from '../components/Icon.astro';
import { getLangFromUrl, useTranslations } from '../i18n/utils';
import LocaleSwitch from '../components/LocaleSwitch.astro';
import DisplayMode from "../components/DisplayMode.astro";

interface Props {
	title: string;
}

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const { title } = Astro.props;

---

<!doctype html>
<html lang={lang}>
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body>
		<script is:inline>
			// is:inlineでチラツキを解消できる。
			const savedTheme = localStorage.getItem('theme');
			console.log('savedTheme:', savedTheme);
			if(savedTheme) {
				document.documentElement.classList.add(savedTheme);
			} else {
				const systemPreference = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'dark';
				document.documentElement.classList.add(systemPreference);
				localStorage.setItem('theme', systemPreference);
			}
		</script>
		<header>
			<div class="header__logo">
				LOGO
			</div>

			<div class="header__links">
				<Icon icon="github-logo" size="3rem" href="https://github.com/masterak-902"/>
				<!-- <Icon icon="discord-logo" size="3rem" /> -->
			</div>

			<!-- スクリプト -->
			<div class="header__a11y">
				<!-- ロケールスイッチ -->
				<LocaleSwitch/>
				<!-- 表示モード変更 -->
				<DisplayMode/>
			</div>

			<nav>
				<a href={`/${lang}/`}>{t('nav.home')}</a>
				<a href={`/${lang}/contact`}>{t('nav.contact')}</a>
			</nav>
		</header>
		<slot />
		<footer>

		</footer>
	</body>
</html>

<style is:global>
	:root {
		--color-codeblock: #ffc127;
		--bgcolor-codeblock: #717171;

		--alert-color: #FF4B00

	}
	html {
		background-color: var(--bgcolor-basic);
		font-family: sans-serif;
		padding: 2rem;

		/* 1rem = 8px */
		font-size: 8px;
		overflow-y: scroll;
	}

	html.dark {
		--color-font: #fcb400;
        --bgcolor-basic: #282540;
	}

	html.light {
		--color-font: #181b2b;
		--bgcolor-basic: #a8d8d9;
	}

	html::-webkit-scrollbar {
		background-color: var(--color-basic);
		width: 4px;
		height: 4px;
	}

	html::-webkit-scrollbar-thumb {
		background-color: var(--color-font);
		border-radius: 4px;
	}

	/* レイアウトに関するスタイル */
	body {
		display: grid;
		grid-template-columns: 464px 920px 1fr;
		grid-template-rows: 1fr 1fr 200px;

		gap: 2rem;

		color: var(--color-font);
		font-size: 2rem;
	}

	header {
		grid-column: 1 / 2;
		padding: 0 2rem;
		
		/* border: var(--color-font);
		border: 1px solid;
		border-radius: 0.5rem; */
	}
	
	.header__logo {
		margin-bottom: 1rem;
		padding: 0 2rem;
		
		font-size: 8rem;
		font-weight: 900;
		letter-spacing: 0.8rem;
	}

	.header__links {
		display: flex;
		flex-wrap: wrap;
		
		margin-bottom: 2rem;
		padding: 0 2rem;
		gap: 2rem;
	}
	
	.header__a11y {
		display: flex;
		flex-wrap: wrap;
		
		margin-bottom: 2rem;
		padding: 0 2rem;
		gap: 2rem;
		letter-spacing: 0.1rem;
	}
	nav {
		display: flex;
		flex-flow: column;

		margin: 0 2rem;
		padding: 2rem 0;
		gap: 1rem;

		letter-spacing: 0.1rem;
		border-top: 1px solid var(--color-font);
	}

	nav > a:hover {
		opacity: 0.8;
	}
	main {
		grid-row: 1 / 2;
		grid-column: 2 / 4;
		width: 920px;

		padding: 2rem 4rem;

		border: 1px solid var(--color-font);
		border-radius: 0.5rem;
	}

	footer {
		grid-row: 2 / 3;
		grid-column: 1 / 4;

		padding: 2rem;

		/* border: var(--color-font);
		border: 1px solid;
		border-radius: 0.5rem; */
	}


</style>
